function C({apiKey:h,suggestApiKey:y,lang:f,zoom:m,center:g,geoObjectProperties:r,geoObjectOptions:l,isDisabled:w,mode:b,deleteBtnParameters:v,drawBtnParameters:c,editBtnParameters:p,statePath:B,setStateUsing:S,getStateUsing:D,mapEl:A,state:E}){return{state:E,statePath:B,isDisabled:w,zoom:m,mode:b,init:function(){this.loadScript()},loadScript:function(){if(document.getElementById("filament-yandex-map-js")){let t=function(e,n){window[e]?n():setTimeout(function(){t(e,n)},100)};t("filamentYandexMapsAPILoaded",function(){this.createMap()}.bind(this))}else{let t=document.createElement("script");t.id="filament-yandex-map-js",t.src="https://api-maps.yandex.ru/2.1/?lang="+f+"&apikey="+h+"&suggest_apikey="+y,t.onload=()=>{this.createMap()},document.head.appendChild(t)}},createMap:function(){window.filamentYandexMapsAPILoaded=!0,ymaps.ready(()=>{let t=new ymaps.control.SearchControl({options:{size:"large",provider:"yandex#search"}}),e=new ymaps.Map(A,{center:g,controls:["fullscreenControl","zoomControl",t],zoom:this.zoom},{yandexMapDisablePoiInteractivity:!0}),n=this.setupGeoObject(e);this.$watch("state",i=>{if(this.state===void 0||!n)return;function a(o,s){return Array.isArray(o)&&Array.isArray(s)&&o.length===s.length&&o.every((d,u)=>Array.isArray(d)&&Array.isArray(s[u])?a(d,s[u]):d===s[u])}a(this.state,n.geometry.getCoordinates())||n.geometry.setCoordinates(this.getState())})})},getState:function(){let t=this.mode==="placemark"?null:[];return this.state===null?t:this.state},setState:function(t){t=Array.isArray(t)&&t.length?t:null,this.state=t,S(this.statePath,this.state)},setupGeoObject:function(t){let e=null,n=!0,i=!0;switch(this.mode){case"placemark":e=new ymaps.Placemark(this.getState(),r,{...l,draggable:!1}),n=!1;break;case"polyline":e=new ymaps.Polyline(this.getState(),r,l);break;case"polygon":e=new ymaps.Polygon(this.getState(),r,l);break}return e&&(t.geoObjects.add(e),this.zoomToGeoObject(t,e),this.isDisabled||(this.enableGeoObjectControls(t,e,n,i),this.enableGeoObjectEvents(e))),e},zoomToGeoObject:function(t,e){let n=e.geometry.getBounds();n&&t.setBounds(n,{zoomMargin:100,checkZoomRange:!0}).then(function(){t.setZoom(this.zoom)},function(i){console.log("Error while bounding: "+i)},this)},enableGeoObjectControls:function(t,e,n=!0,i=!0){let a=this.setupDeleteBtn(e),o=this.setupEditBtn(n,e),s=this.setupDrawBtn(i,e);o.events.add("deselect",()=>{e.editor.stopEditing(),s.deselect()}),s.events.add("select",()=>{e.editor.startDrawing(),o.select()}),t.controls.add(o),t.controls.add(s),t.controls.add(a)},setupDeleteBtn:function(t){let e=new ymaps.control.Button(v);return e.events.add("click",()=>{t.geometry.setCoordinates([]),t.options.set("visible",!1),t.options.set("visible",!0)}),e},setupEditBtn:function(t,e){let n=new ymaps.control.Button({data:p.data,options:{...p.options,visible:t}});return n.events.add("select",()=>{e.editor.startEditing()}),n},setupDrawBtn:function(t,e){let n=new ymaps.control.Button({data:c.data,options:{...c.options,visible:t}});return n.events.add("deselect",()=>{e.editor.stopDrawing()}),n},enableGeoObjectEvents:function(t){t.events.add("geometrychange",e=>{this.setState(t.geometry.getCoordinates())})}}}export{C as default};
