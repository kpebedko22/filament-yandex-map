function filamentYandexMapField({apiKey,suggestApiKey,lang,zoom,center,geoObjectProperties,geoObjectOptions,isDisabled,mode,deleteBtnParameters,drawBtnParameters,editBtnParameters,statePath,setStateUsing,getStateUsing,mapEl,state}){return{state,statePath,isDisabled,zoom,mode,init:function(){this.loadScript()},loadScript:function(){if(document.getElementById("filament-yandex-map-js")){let waitForGlobal=function(key,callback){window[key]?callback():setTimeout(function(){waitForGlobal(key,callback)},100)};waitForGlobal("filamentYandexMapsAPILoaded",function(){this.createMap()}.bind(this))}else{let script=document.createElement("script");script.id="filament-yandex-map-js",script.src="https://api-maps.yandex.ru/2.1/?lang="+lang+"&apikey="+apiKey+"&suggest_apikey="+suggestApiKey,script.onload=()=>{this.createMap()},document.head.appendChild(script)}},createMap:function(){window.filamentYandexMapsAPILoaded=!0,ymaps.ready(()=>{let inputSearch=new ymaps.control.SearchControl({options:{size:"large",provider:"yandex#search"}}),map=new ymaps.Map(mapEl,{center,controls:["fullscreenControl","zoomControl",inputSearch],zoom:this.zoom},{yandexMapDisablePoiInteractivity:!0}),geoObject=this.setupGeoObject(map);this.$watch("state",e=>{if(this.state===void 0||!geoObject)return;function arrayEquals(a,b){return Array.isArray(a)&&Array.isArray(b)&&a.length===b.length&&a.every((val,index)=>Array.isArray(val)&&Array.isArray(b[index])?arrayEquals(val,b[index]):val===b[index])}arrayEquals(this.state,geoObject.geometry.getCoordinates())||geoObject.geometry.setCoordinates(this.getState())})})},getState:function(){let emptyState=this.mode==="placemark"?null:[];return this.state===null?emptyState:this.state},setState:function(state2){state2=Array.isArray(state2)&&state2.length?state2:null,this.state=state2,setStateUsing(this.statePath,this.state)},setupGeoObject:function(map){let geoObject=null,isEditing=!0,isDrawing=!0;switch(this.mode){case"placemark":geoObject=new ymaps.Placemark(this.getState(),geoObjectProperties,{...geoObjectOptions,draggable:!1}),isEditing=!1;break;case"polyline":geoObject=new ymaps.Polyline(this.getState(),geoObjectProperties,geoObjectOptions);break;case"polygon":geoObject=new ymaps.Polygon(this.getState(),geoObjectProperties,geoObjectOptions);break}return geoObject&&(map.geoObjects.add(geoObject),this.zoomToGeoObject(map,geoObject),this.isDisabled||(this.enableGeoObjectControls(map,geoObject,isEditing,isDrawing),this.enableGeoObjectEvents(geoObject))),geoObject},zoomToGeoObject:function(map,geoObject){let bounds=geoObject.geometry.getBounds();bounds&&map.setBounds(bounds,{zoomMargin:100,checkZoomRange:!0}).then(function(){map.setZoom(this.zoom)},function(err){console.log("Error while bounding: "+err)},this)},enableGeoObjectControls:function(map,geoObject,isEditing=!0,isDrawing=!0){let deleteBtn=this.setupDeleteBtn(geoObject),editBtn=this.setupEditBtn(isEditing,geoObject),drawBtn=this.setupDrawBtn(isDrawing,geoObject);editBtn.events.add("deselect",()=>{geoObject.editor.stopEditing(),drawBtn.deselect()}),drawBtn.events.add("select",()=>{geoObject.editor.startDrawing(),editBtn.select()}),map.controls.add(editBtn),map.controls.add(drawBtn),map.controls.add(deleteBtn)},setupDeleteBtn:function(geoObject){let btn=new ymaps.control.Button(deleteBtnParameters);return btn.events.add("click",()=>{geoObject.geometry.setCoordinates([]),geoObject.options.set("visible",!1),geoObject.options.set("visible",!0)}),btn},setupEditBtn:function(isEditing,geoObject){let btn=new ymaps.control.Button({data:editBtnParameters.data,options:{...editBtnParameters.options,visible:isEditing}});return btn.events.add("select",()=>{geoObject.editor.startEditing()}),btn},setupDrawBtn:function(isDrawing,geoObject){let btn=new ymaps.control.Button({data:drawBtnParameters.data,options:{...drawBtnParameters.options,visible:isDrawing}});return btn.events.add("deselect",()=>{geoObject.editor.stopDrawing()}),btn},enableGeoObjectEvents:function(geoObject){geoObject.events.add("geometrychange",e=>{this.setState(geoObject.geometry.getCoordinates())})}}}export{filamentYandexMapField as default};
